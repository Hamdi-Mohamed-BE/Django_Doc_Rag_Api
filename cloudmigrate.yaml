# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
serviceAccount: 'projects/${PROJECT_ID}/serviceAccounts/${PROJECT_NUMBER}-compute@developer.gserviceaccount.com'
logsBucket: 'gs://${PROJECT_ID}_cloudbuild'
options:
 logging: GCS_ONLY
steps:
  - id: "build image"
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}", "."]
  - id: "push image"
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}"]
  - id: "apply migrations"
    name: "gcr.io/google-appengine/exec-wrapper"
    args:
      [
        "-i",
        "gcr.io/$PROJECT_ID/${_SERVICE_NAME}",
        "-s",
        "${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME}",
        "-e",
        "SETTINGS_NAME=${_SECRET_SETTINGS_NAME}",
        "-e",
        "IS_DEVELOPMENT=0",
        "--",
        "python",
        "manage.py",
        "migrate"
      ]
  - id: "collect static"
    name: "gcr.io/google-appengine/exec-wrapper"
    args:
      [
        "-i",
        "gcr.io/$PROJECT_ID/${_SERVICE_NAME}",
        "-s",
        "${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME}",
        "-e",
        "SETTINGS_NAME=${_SECRET_SETTINGS_NAME}",
        "-e",
        "IS_DEVELOPMENT=0",
        "-e",
        "SERVICE_ACCOUNT=cloud-build", # name of the service account credentials
        "--",
        "python",
        "manage.py",
        "collectstatic",
        "--verbosity",
        "2",
        "--no-input",
      ]
  - id: "deploy app"
    name: "gcr.io/cloud-builders/gcloud"
    args:
      [
      "run", "deploy",
      "${_SERVICE_NAME}",
      "--platform",
      "managed",
      "--region",
      "${_REGION}",
      "--image",
      "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}",
      "--set-cloudsql-instances",
      "${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME}",
      "--service-account",
      "${_SERVICE_ACCOUNT_NAME}@${PROJECT_ID}.iam.gserviceaccount.com",
      "--update-env-vars=GOOGLE_CLOUD_PROJECT=$PROJECT_ID,SERVICE_ACCOUNT=$_SERVICE_ACCOUNT_NAME",
      "--allow-unauthenticated"
    ]
  - id: "update cloud run service"
    name: "gcr.io/cloud-builders/gcloud"
    entrypoint: 'sh'
    args: ['./scripts/update_cloud_run.sh']
substitutions:
  _INSTANCE_NAME: alter-knights-db
  _REGION: europe-west1
  _SERVICE_NAME: alter-knights-backend
  _SECRET_SETTINGS_NAME: django-settings
  _SERVICE_ACCOUNT_NAME: cloud-run
images:
  - "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}"
# [END cloudrun_django_cloudmigrate]
